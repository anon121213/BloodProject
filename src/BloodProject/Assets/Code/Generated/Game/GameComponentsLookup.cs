//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int AddedView = 0;
    public const int Dead = 1;
    public const int Destructed = 2;
    public const int Owner = 3;
    public const int Processed = 4;
    public const int Radius = 5;
    public const int SelfDestructTimer = 6;
    public const int View = 7;
    public const int ViewPath = 8;
    public const int ViewPrefab = 9;
    public const int ViewReference = 10;
    public const int ViewRoot = 11;
    public const int Active = 12;
    public const int CharacterController = 13;
    public const int Damage = 14;
    public const int EntityLink = 15;
    public const int Id = 16;
    public const int NavMeshAgent = 17;
    public const int Rigidbody = 18;
    public const int Transform = 19;
    public const int WorldPosition = 20;
    public const int WorldRotation = 21;
    public const int Camera = 22;
    public const int CameraHolder = 23;
    public const int CurrentDashCooldown = 24;
    public const int CurrentDashDuration = 25;
    public const int DashAvailable = 26;
    public const int DashCooldown = 27;
    public const int DashDistance = 28;
    public const int DashDuration = 29;
    public const int Dashing = 30;
    public const int OnDashCooldown = 31;
    public const int OnEndDash = 32;
    public const int OnStartDash = 33;
    public const int AttackCombo = 34;
    public const int AttackEffects = 35;
    public const int AttackRadius = 36;
    public const int BehaviourTree = 37;
    public const int CheckPlayerRadius = 38;
    public const int CurrentNode = 39;
    public const int DistanceToAttackPlayer = 40;
    public const int DistanceToPatrol = 41;
    public const int Enemy = 42;
    public const int MaxAttackCombo = 43;
    public const int RootNode = 44;
    public const int RotateToPlayerSpeed = 45;
    public const int TargetAvailable = 46;
    public const int TargetsLayerMask = 47;
    public const int CheckGround = 48;
    public const int CheckGroundRadius = 49;
    public const int Gravity = 50;
    public const int GravityVelocity = 51;
    public const int Grounded = 52;
    public const int IgnoreGroundLayers = 53;
    public const int Direction = 54;
    public const int DiscreteRbMovement = 55;
    public const int JumpAvailable = 56;
    public const int JumpForce = 57;
    public const int Jumping = 58;
    public const int LastWorldPosition = 59;
    public const int MoveByNavMesh = 60;
    public const int MoveByPhysic = 61;
    public const int MovementAvailable = 62;
    public const int Moving = 63;
    public const int NavMashTargetPosition = 64;
    public const int Rotate = 65;
    public const int RotationAlignedAlongDirection = 66;
    public const int Speed = 67;
    public const int Teleport = 68;
    public const int TurnedAlongDirection = 69;
    public const int LeftHand = 70;
    public const int Model = 71;
    public const int Player = 72;
    public const int RigBuilder = 73;
    public const int RightHand = 74;
    public const int EffectSetups = 75;
    public const int Projectile = 76;
    public const int ProjectileData = 77;
    public const int SimpleBulletProjectile = 78;
    public const int Collide = 79;
    public const int CollideEntity = 80;
    public const int CollideEntityCollider = 81;
    public const int IgnoreLayers = 82;
    public const int LayerMask = 83;
    public const int ReadyToCollectTargets = 84;
    public const int Attack = 85;
    public const int AttackAvailable = 86;
    public const int AttackDelay = 87;
    public const int Attacker = 88;
    public const int AttackPoint = 89;
    public const int CurrentAttackDelay = 90;
    public const int CurrentWeapon = 91;
    public const int LeftHandHolder = 92;
    public const int OnAttackDelay = 93;
    public const int RightHandHolder = 94;
    public const int Weapon = 95;
    public const int WeaponHolder = 96;
    public const int CurrentHealth = 97;
    public const int DamageEffect = 98;
    public const int Effect = 99;
    public const int EffectValue = 100;
    public const int MaxHealth = 101;
    public const int ProducerId = 102;
    public const int PushEffect = 103;
    public const int TargetId = 104;
    public const int BaseStats = 105;
    public const int StatChange = 106;
    public const int StatModifiers = 107;

    public const int TotalComponents = 108;

    public static readonly string[] componentNames = {
        "AddedView",
        "Dead",
        "Destructed",
        "Owner",
        "Processed",
        "Radius",
        "SelfDestructTimer",
        "View",
        "ViewPath",
        "ViewPrefab",
        "ViewReference",
        "ViewRoot",
        "Active",
        "CharacterController",
        "Damage",
        "EntityLink",
        "Id",
        "NavMeshAgent",
        "Rigidbody",
        "Transform",
        "WorldPosition",
        "WorldRotation",
        "Camera",
        "CameraHolder",
        "CurrentDashCooldown",
        "CurrentDashDuration",
        "DashAvailable",
        "DashCooldown",
        "DashDistance",
        "DashDuration",
        "Dashing",
        "OnDashCooldown",
        "OnEndDash",
        "OnStartDash",
        "AttackCombo",
        "AttackEffects",
        "AttackRadius",
        "BehaviourTree",
        "CheckPlayerRadius",
        "CurrentNode",
        "DistanceToAttackPlayer",
        "DistanceToPatrol",
        "Enemy",
        "MaxAttackCombo",
        "RootNode",
        "RotateToPlayerSpeed",
        "TargetAvailable",
        "TargetsLayerMask",
        "CheckGround",
        "CheckGroundRadius",
        "Gravity",
        "GravityVelocity",
        "Grounded",
        "IgnoreGroundLayers",
        "Direction",
        "DiscreteRbMovement",
        "JumpAvailable",
        "JumpForce",
        "Jumping",
        "LastWorldPosition",
        "MoveByNavMesh",
        "MoveByPhysic",
        "MovementAvailable",
        "Moving",
        "NavMashTargetPosition",
        "Rotate",
        "RotationAlignedAlongDirection",
        "Speed",
        "Teleport",
        "TurnedAlongDirection",
        "LeftHand",
        "Model",
        "Player",
        "RigBuilder",
        "RightHand",
        "EffectSetups",
        "Projectile",
        "ProjectileData",
        "SimpleBulletProjectile",
        "Collide",
        "CollideEntity",
        "CollideEntityCollider",
        "IgnoreLayers",
        "LayerMask",
        "ReadyToCollectTargets",
        "Attack",
        "AttackAvailable",
        "AttackDelay",
        "Attacker",
        "AttackPoint",
        "CurrentAttackDelay",
        "CurrentWeapon",
        "LeftHandHolder",
        "OnAttackDelay",
        "RightHandHolder",
        "Weapon",
        "WeaponHolder",
        "CurrentHealth",
        "DamageEffect",
        "Effect",
        "EffectValue",
        "MaxHealth",
        "ProducerId",
        "PushEffect",
        "TargetId",
        "BaseStats",
        "StatChange",
        "StatModifiers"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(_Scripts.Common.AddedView),
        typeof(_Scripts.Common.Dead),
        typeof(_Scripts.Common.Destructed),
        typeof(_Scripts.Common.Owner),
        typeof(_Scripts.Common.Processed),
        typeof(_Scripts.Common.Radius),
        typeof(_Scripts.Common.SelfDestructTimer),
        typeof(_Scripts.Common.View),
        typeof(_Scripts.Common.ViewPath),
        typeof(_Scripts.Common.ViewPrefab),
        typeof(_Scripts.Common.ViewReference),
        typeof(_Scripts.Common.ViewRootComponent),
        typeof(_Scripts.Gameplay.Common.CommonComponents.Active),
        typeof(_Scripts.Gameplay.Common.CommonComponents.CharacterControllerComponent),
        typeof(_Scripts.Gameplay.Common.CommonComponents.Damage),
        typeof(_Scripts.Gameplay.Common.CommonComponents.EntityLink),
        typeof(_Scripts.Gameplay.Common.CommonComponents.Id),
        typeof(_Scripts.Gameplay.Common.CommonComponents.NavMeshAgentComponent),
        typeof(_Scripts.Gameplay.Common.CommonComponents.RigidbodyComponent),
        typeof(_Scripts.Gameplay.Common.CommonComponents.TransformComponent),
        typeof(_Scripts.Gameplay.Common.CommonComponents.WorldPosition),
        typeof(_Scripts.Gameplay.Common.CommonComponents.WorldRotation),
        typeof(_Scripts.Gameplay.Features.Camera.CameraComponents.CameraComponent),
        typeof(_Scripts.Gameplay.Features.Camera.CameraComponents.CameraHolder),
        typeof(_Scripts.Gameplay.Features.Dash.CurrentDashCooldown),
        typeof(_Scripts.Gameplay.Features.Dash.CurrentDashDuration),
        typeof(_Scripts.Gameplay.Features.Dash.DashAvailable),
        typeof(_Scripts.Gameplay.Features.Dash.DashCooldown),
        typeof(_Scripts.Gameplay.Features.Dash.DashDistance),
        typeof(_Scripts.Gameplay.Features.Dash.DashDuration),
        typeof(_Scripts.Gameplay.Features.Dash.Dashing),
        typeof(_Scripts.Gameplay.Features.Dash.OnDashCooldown),
        typeof(_Scripts.Gameplay.Features.Dash.OnEndDash),
        typeof(_Scripts.Gameplay.Features.Dash.OnStartDash),
        typeof(_Scripts.Gameplay.Features.Enemies.AttackCombo),
        typeof(_Scripts.Gameplay.Features.Enemies.AttackEffects),
        typeof(_Scripts.Gameplay.Features.Enemies.AttackRadiusComponent),
        typeof(_Scripts.Gameplay.Features.Enemies.BehaviourTreeComponent),
        typeof(_Scripts.Gameplay.Features.Enemies.CheckPlayerRadius),
        typeof(_Scripts.Gameplay.Features.Enemies.CurrentNode),
        typeof(_Scripts.Gameplay.Features.Enemies.DistanceToAttackPlayer),
        typeof(_Scripts.Gameplay.Features.Enemies.DistanceToPatrol),
        typeof(_Scripts.Gameplay.Features.Enemies.Enemy),
        typeof(_Scripts.Gameplay.Features.Enemies.MaxAttackCombo),
        typeof(_Scripts.Gameplay.Features.Enemies.RootNode),
        typeof(_Scripts.Gameplay.Features.Enemies.RotateToPlayerSpeed),
        typeof(_Scripts.Gameplay.Features.Enemies.TargetAvailable),
        typeof(_Scripts.Gameplay.Features.Enemies.TargetsLayerMask),
        typeof(_Scripts.Gameplay.Features.Gravity.CheckGround),
        typeof(_Scripts.Gameplay.Features.Gravity.CheckGroundRadius),
        typeof(_Scripts.Gameplay.Features.Gravity.Gravity),
        typeof(_Scripts.Gameplay.Features.Gravity.GravityVelocity),
        typeof(_Scripts.Gameplay.Features.Gravity.Grounded),
        typeof(_Scripts.Gameplay.Features.Gravity.IgnoreGroundLayers),
        typeof(_Scripts.Gameplay.Features.Movement.Direction),
        typeof(_Scripts.Gameplay.Features.Movement.DiscreteRbMovement),
        typeof(_Scripts.Gameplay.Features.Movement.JumpAvailable),
        typeof(_Scripts.Gameplay.Features.Movement.JumpForce),
        typeof(_Scripts.Gameplay.Features.Movement.Jumping),
        typeof(_Scripts.Gameplay.Features.Movement.LastWorldPosition),
        typeof(_Scripts.Gameplay.Features.Movement.MoveByNavMesh),
        typeof(_Scripts.Gameplay.Features.Movement.MoveByPhysic),
        typeof(_Scripts.Gameplay.Features.Movement.MovementAvailable),
        typeof(_Scripts.Gameplay.Features.Movement.Moving),
        typeof(_Scripts.Gameplay.Features.Movement.NavMashTargetPosition),
        typeof(_Scripts.Gameplay.Features.Movement.Rotate),
        typeof(_Scripts.Gameplay.Features.Movement.RotationAlignedAlongDirection),
        typeof(_Scripts.Gameplay.Features.Movement.Speed),
        typeof(_Scripts.Gameplay.Features.Movement.Teleport),
        typeof(_Scripts.Gameplay.Features.Movement.TurnedAlongDirection),
        typeof(_Scripts.Gameplay.Features.Player.LeftHand),
        typeof(_Scripts.Gameplay.Features.Player.Model),
        typeof(_Scripts.Gameplay.Features.Player.Player),
        typeof(_Scripts.Gameplay.Features.Player.RigBuilderComponent),
        typeof(_Scripts.Gameplay.Features.Player.RightHand),
        typeof(_Scripts.Gameplay.Features.Projectiles.EffectSetupsComponent),
        typeof(_Scripts.Gameplay.Features.Projectiles.Projectile),
        typeof(_Scripts.Gameplay.Features.Projectiles.ProjectileDataComponent),
        typeof(_Scripts.Gameplay.Features.Projectiles.SimpleBulletProjectile),
        typeof(_Scripts.Gameplay.Features.ProjectilesCollides.Collide),
        typeof(_Scripts.Gameplay.Features.ProjectilesCollides.CollideEntity),
        typeof(_Scripts.Gameplay.Features.ProjectilesCollides.CollideEntityCollider),
        typeof(_Scripts.Gameplay.Features.ProjectilesCollides.IgnoreLayers),
        typeof(_Scripts.Gameplay.Features.ProjectilesCollides.LayerMaskComponent),
        typeof(_Scripts.Gameplay.Features.ProjectilesCollides.ReadyToCollectTargets),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.Attack),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.AttackAvailable),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.AttackDelay),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.Attacker),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.AttackPoint),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentAttackDelay),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentWeapon),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.LeftHandHolder),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.OnAttackDelay),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.RightHandHolder),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.Weapon),
        typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.WeaponHolder),
        typeof(Gameplay.Features.Effects.CurrentHealth),
        typeof(Gameplay.Features.Effects.DamageEffect),
        typeof(Gameplay.Features.Effects.Effect),
        typeof(Gameplay.Features.Effects.EffectValue),
        typeof(Gameplay.Features.Effects.MaxHealth),
        typeof(Gameplay.Features.Effects.ProducerId),
        typeof(Gameplay.Features.Effects.PushEffect),
        typeof(Gameplay.Features.Effects.TargetId),
        typeof(Gameplay.Features.EntitiesStats.BaseStats),
        typeof(Gameplay.Features.EntitiesStats.StatChange),
        typeof(Gameplay.Features.EntitiesStats.StatModifiers)
    };
}
