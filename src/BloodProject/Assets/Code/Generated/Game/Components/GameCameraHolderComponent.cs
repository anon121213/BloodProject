//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraHolder;

    public static Entitas.IMatcher<GameEntity> CameraHolder {
        get {
            if (_matcherCameraHolder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraHolder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraHolder = matcher;
            }

            return _matcherCameraHolder;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Scripts.Gameplay.Features.Camera.CameraComponents.CameraHolder cameraHolder { get { return (_Scripts.Gameplay.Features.Camera.CameraComponents.CameraHolder)GetComponent(GameComponentsLookup.CameraHolder); } }
    public UnityEngine.Transform CameraHolder { get { return cameraHolder.Value; } }
    public bool hasCameraHolder { get { return HasComponent(GameComponentsLookup.CameraHolder); } }

    public GameEntity AddCameraHolder(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.CameraHolder;
        var component = (_Scripts.Gameplay.Features.Camera.CameraComponents.CameraHolder)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Camera.CameraComponents.CameraHolder));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCameraHolder(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.CameraHolder;
        var component = (_Scripts.Gameplay.Features.Camera.CameraComponents.CameraHolder)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Camera.CameraComponents.CameraHolder));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCameraHolder() {
        RemoveComponent(GameComponentsLookup.CameraHolder);
        return this;
    }
}
