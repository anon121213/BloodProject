//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShootDelay;

    public static Entitas.IMatcher<GameEntity> ShootDelay {
        get {
            if (_matcherShootDelay == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ShootDelay);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShootDelay = matcher;
            }

            return _matcherShootDelay;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Scripts.Gameplay.Features.Weapon.WeaponComponents.ShootDelay shootDelay { get { return (_Scripts.Gameplay.Features.Weapon.WeaponComponents.ShootDelay)GetComponent(GameComponentsLookup.ShootDelay); } }
    public float ShootDelay { get { return shootDelay.Value; } }
    public bool hasShootDelay { get { return HasComponent(GameComponentsLookup.ShootDelay); } }

    public GameEntity AddShootDelay(float newValue) {
        var index = GameComponentsLookup.ShootDelay;
        var component = (_Scripts.Gameplay.Features.Weapon.WeaponComponents.ShootDelay)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.ShootDelay));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceShootDelay(float newValue) {
        var index = GameComponentsLookup.ShootDelay;
        var component = (_Scripts.Gameplay.Features.Weapon.WeaponComponents.ShootDelay)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.ShootDelay));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveShootDelay() {
        RemoveComponent(GameComponentsLookup.ShootDelay);
        return this;
    }
}
