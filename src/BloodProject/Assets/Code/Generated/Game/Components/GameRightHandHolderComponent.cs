//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRightHandHolder;

    public static Entitas.IMatcher<GameEntity> RightHandHolder {
        get {
            if (_matcherRightHandHolder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RightHandHolder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRightHandHolder = matcher;
            }

            return _matcherRightHandHolder;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Scripts.Gameplay.Features.Weapon.WeaponComponents.RightHandHolder rightHandHolder { get { return (_Scripts.Gameplay.Features.Weapon.WeaponComponents.RightHandHolder)GetComponent(GameComponentsLookup.RightHandHolder); } }
    public UnityEngine.Transform RightHandHolder { get { return rightHandHolder.Value; } }
    public bool hasRightHandHolder { get { return HasComponent(GameComponentsLookup.RightHandHolder); } }

    public GameEntity AddRightHandHolder(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.RightHandHolder;
        var component = (_Scripts.Gameplay.Features.Weapon.WeaponComponents.RightHandHolder)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.RightHandHolder));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRightHandHolder(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.RightHandHolder;
        var component = (_Scripts.Gameplay.Features.Weapon.WeaponComponents.RightHandHolder)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.RightHandHolder));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRightHandHolder() {
        RemoveComponent(GameComponentsLookup.RightHandHolder);
        return this;
    }
}
