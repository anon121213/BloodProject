//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentAttackDelay;

    public static Entitas.IMatcher<GameEntity> CurrentAttackDelay {
        get {
            if (_matcherCurrentAttackDelay == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentAttackDelay);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentAttackDelay = matcher;
            }

            return _matcherCurrentAttackDelay;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentAttackDelay currentAttackDelay { get { return (_Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentAttackDelay)GetComponent(GameComponentsLookup.CurrentAttackDelay); } }
    public float CurrentAttackDelay { get { return currentAttackDelay.Value; } }
    public bool hasCurrentAttackDelay { get { return HasComponent(GameComponentsLookup.CurrentAttackDelay); } }

    public GameEntity AddCurrentAttackDelay(float newValue) {
        var index = GameComponentsLookup.CurrentAttackDelay;
        var component = (_Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentAttackDelay)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentAttackDelay));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCurrentAttackDelay(float newValue) {
        var index = GameComponentsLookup.CurrentAttackDelay;
        var component = (_Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentAttackDelay)CreateComponent(index, typeof(_Scripts.Gameplay.Features.Weapon.WeaponComponents.CurrentAttackDelay));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCurrentAttackDelay() {
        RemoveComponent(GameComponentsLookup.CurrentAttackDelay);
        return this;
    }
}
