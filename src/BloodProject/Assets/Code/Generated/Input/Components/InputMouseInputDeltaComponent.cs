//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherMouseInputDelta;

    public static Entitas.IMatcher<InputEntity> MouseInputDelta {
        get {
            if (_matcherMouseInputDelta == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.MouseInputDelta);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherMouseInputDelta = matcher;
            }

            return _matcherMouseInputDelta;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Gameplay.Features.Input.MouseInputDelta mouseInputDelta { get { return (Gameplay.Features.Input.MouseInputDelta)GetComponent(InputComponentsLookup.MouseInputDelta); } }
    public UnityEngine.Vector2 MouseInputDelta { get { return mouseInputDelta.Value; } }
    public bool hasMouseInputDelta { get { return HasComponent(InputComponentsLookup.MouseInputDelta); } }

    public InputEntity AddMouseInputDelta(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.MouseInputDelta;
        var component = (Gameplay.Features.Input.MouseInputDelta)CreateComponent(index, typeof(Gameplay.Features.Input.MouseInputDelta));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public InputEntity ReplaceMouseInputDelta(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.MouseInputDelta;
        var component = (Gameplay.Features.Input.MouseInputDelta)CreateComponent(index, typeof(Gameplay.Features.Input.MouseInputDelta));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public InputEntity RemoveMouseInputDelta() {
        RemoveComponent(InputComponentsLookup.MouseInputDelta);
        return this;
    }
}
