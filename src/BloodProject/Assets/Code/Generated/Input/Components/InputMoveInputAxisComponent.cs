//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherMoveInputAxis;

    public static Entitas.IMatcher<InputEntity> MoveInputAxis {
        get {
            if (_matcherMoveInputAxis == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.MoveInputAxis);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherMoveInputAxis = matcher;
            }

            return _matcherMoveInputAxis;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Gameplay.Features.Input.MoveInputAxis moveInputAxis { get { return (Gameplay.Features.Input.MoveInputAxis)GetComponent(InputComponentsLookup.MoveInputAxis); } }
    public UnityEngine.Vector3 MoveInputAxis { get { return moveInputAxis.Value; } }
    public bool hasMoveInputAxis { get { return HasComponent(InputComponentsLookup.MoveInputAxis); } }

    public InputEntity AddMoveInputAxis(UnityEngine.Vector3 newValue) {
        var index = InputComponentsLookup.MoveInputAxis;
        var component = (Gameplay.Features.Input.MoveInputAxis)CreateComponent(index, typeof(Gameplay.Features.Input.MoveInputAxis));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public InputEntity ReplaceMoveInputAxis(UnityEngine.Vector3 newValue) {
        var index = InputComponentsLookup.MoveInputAxis;
        var component = (Gameplay.Features.Input.MoveInputAxis)CreateComponent(index, typeof(Gameplay.Features.Input.MoveInputAxis));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public InputEntity RemoveMoveInputAxis() {
        RemoveComponent(InputComponentsLookup.MoveInputAxis);
        return this;
    }
}
