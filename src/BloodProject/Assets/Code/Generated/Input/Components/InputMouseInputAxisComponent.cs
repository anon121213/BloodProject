//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherMouseInputAxis;

    public static Entitas.IMatcher<InputEntity> MouseInputAxis {
        get {
            if (_matcherMouseInputAxis == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.MouseInputAxis);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherMouseInputAxis = matcher;
            }

            return _matcherMouseInputAxis;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Gameplay.Features.Input.MouseInputAxis mouseInputAxis { get { return (Gameplay.Features.Input.MouseInputAxis)GetComponent(InputComponentsLookup.MouseInputAxis); } }
    public UnityEngine.Vector2 MouseInputAxis { get { return mouseInputAxis.Value; } }
    public bool hasMouseInputAxis { get { return HasComponent(InputComponentsLookup.MouseInputAxis); } }

    public InputEntity AddMouseInputAxis(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.MouseInputAxis;
        var component = (Gameplay.Features.Input.MouseInputAxis)CreateComponent(index, typeof(Gameplay.Features.Input.MouseInputAxis));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public InputEntity ReplaceMouseInputAxis(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.MouseInputAxis;
        var component = (Gameplay.Features.Input.MouseInputAxis)CreateComponent(index, typeof(Gameplay.Features.Input.MouseInputAxis));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public InputEntity RemoveMouseInputAxis() {
        RemoveComponent(InputComponentsLookup.MouseInputAxis);
        return this;
    }
}
